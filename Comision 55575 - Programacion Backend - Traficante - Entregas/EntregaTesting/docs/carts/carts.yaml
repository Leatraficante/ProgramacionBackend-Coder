paths:
  /api/carts:
    get:
      summary: Obtener el listado de todos los carritos
      tags:
        - carts
      parameters:
        - name: cookie
          in: header
          required: true
          description: JWT Cookie para autenticación
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Todos los carritos fueron obtenidos satisfactoriamente de la DB.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/carts"
        "500":
          description: Error interno del servidor, generalmente causado por una query defectuosa o fallo en la conexión.
    post:
      summary: Crear un nuevo carrito asociado al usuario
      tags:
        - carts
      parameters:
        - name: cookie
          in: header
          required: true
          description: JWT Cookie para autenticación
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Carrito creado correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/carts"
        "500":
          description: Error interno del servidor, generalmente causado por una query defectuosa o fallo en la conexión.
  /api/carts/{cid}:
    get:
      summary: Obtener un carrito por cid (identificador del producto ObjectId)
      tags:
        - carts
      security:
        - bearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: Id del carrito a buscar
          schema:
            type: string
        - name: cookie
          in: header
          required: true
          description: JWT Cookie para autenticación
          schema:
            type: string
      responses:
        "200":
          description: producto obtenido correctamente de nuestra DB
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/carts"
        "404":
          description: Carrito no encontrado en la DB
        "500":
          description: Error interno del servidor, generalmente causado por una query defectuosa o fallo en la conexión.
    delete:
      summary: Elimina un producto según el cid (identificador del producto ObjectId)
      tags:
        - carts
      security:
        - bearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: Id del carrito a eliminar
          schema:
            type: string
        - name: cookie
          in: header
          required: true
          description: JWT Cookie para autenticación
          schema:
            type: string
      responses:
        "200":
          description: Carrito eliminado correctamente de nuestra DB
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/carts"
        "404":
          description: Carrito no encontrado en la DB
        "500":
          description: Error interno del servidor, generalmente causado por una query defectuosa o fallo en la conexión.
  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agrega un producto segun id al carrito segun id
      tags:
        - carts
      parameters:
        - name: cookie
          in: header
          required: true
          description: JWT Cookie para autenticación
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Producto agregado exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/carts"
        "404":
          description: Carrito / Producto no encontrado en la DB
        "500":
          description: Error interno del servidor, generalmente causado por una query defectuosa o fallo en la conexión.
    delete:
      summary: Elimina un producto segun id del carrito segun id
      tags:
        - carts
      parameters:
        - name: cookie
          in: header
          required: true
          description: JWT Cookie para autenticación
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/carts"
        "404":
          description: Carrito / Producto no encontrado en la DB
        "500":
          description: Error interno del servidor, generalmente causado por una query defectuosa o fallo en la conexión.
  /api/carts/{cid}/purchase:
    post:
      summary: Crea una nueva coompra asociada al carrito y los productos
      tags:
        - carts
      parameters:
        - name: cookie
          in: header
          required: true
          description: JWT Cookie para autenticación
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Compra realizada exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tickets"
        "500":
          description: Error interno del servidor, generalmente causado por una query defectuosa o fallo en la conexión.

components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      in: cookie
      name: JWT
  schemas:
    carts:
      type: object
      properties:
        _id:
          type: string
          description: Id autogenerado por MongoDb, id del carrito
        user:
          type: string
          description: Id del usuario asociado al carrito (Id autogenerado por MongoDb)
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: Id del producto en el carrito (Id autogenerado por MongoDb)
              quantity:
                type: number
                required: true
                description: Cantidad del producto en el carrito
      example:
        _id: 6019b0a7cf1c9a0e98efbc98
        user: 6019b0a7cf1c9a0e98efbc97
        products:
          - productId: 6019b0a7cf1c9a0e98efbc96
            quantity: 2
          - productId: 6019b0a7cf1c9a0e98efbc95
            quantity: 1
    tickets:
      type: object
      properties:
        _id:
          type: string
          description: Id autogenerado por MongoDb, id del ticket
        code:
          type: string
          required: true
          unique: true
          description: Código único del ticket
        purchase_datetime:
          type: string
          required: true
          description: Fecha y hora de la compra del ticket
        amount:
          type: number
          required: true
          description: Monto del ticket
        purchaser:
          type: string
          required: true
          description: Id del comprador (ObjectId) asociado al ticket
      example:
        _id: 6019b0a7cf1c9a0e98efbc99 
        code: CODER1234
        purchase_datetime: "2024-02-03T12:30:00Z" 
        amount: 99.99
        purchaser: 6019b0a7cf1c9a0e98efbc97

# delete('/:cid/product/:pid', deleteProductFromCart);
